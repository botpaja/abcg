object Box

v  -0.5000 -0.5000  0.2000
v  -0.5000 -0.5000 -0.2000
v   0.5000 -0.5000 -0.2000
v   0.5000 -0.5000  0.2000
v  -0.5000  0.5000  0.2000
v   0.5000  0.5000  0.2000
v   0.5000  0.5000 -0.2000
v  -0.5000  0.5000 -0.2000
# 8 vertices

o Box
g Box
f 1 3 2 
f 3 1 4 
f 5 7 6 
f 7 5 8 
f 1 6 4 
f 6 1 5 
f 4 7 3 
f 7 4 6 
f 3 8 2 
f 8 3 7 
f 2 5 1 
f 5 2 8 
# 12 faces# object Box
#A1
v  -0.5000 0.6000 0.5000
#B2
v  -0.5000 0.6000 -0.5000
#D3
v   0.5000 0.6000 -0.5000
#E4
v   0.5000 0.6000 0.5000
#F5
v  -0.5000 1.0000 0.4000
#G6
v   0.3000 1.0000 0.4000
#H7
v   0.3000 1.0000 -0.4000
#I8
v  -0.5000 1.0000 -0.4000

#J9
v  1.0000 0.5000 0.50000
#K10
v  1.0000 0.5000 -0.5000
#L11
v -1.0000 0.5000 -0.5000
#M12
v -1.0000 0.5000 0.5000
#N13
v  1.0000 0.2000 0.5000
#O14
v  1.0000 0.2000 -0.5000
#P15
v  -1.0000 0.2000 -0.5000
#Q16
v  -1.0000 0.2000 0.5000
# 8 vertices

o Box
g Box
f 1 3 2 
f 3 1 4 
f 5 7 6 
f 7 5 8 
f 1 6 4 
f 6 1 5 
f 4 7 3 
f 7 4 6 
f 3 8 2 
f 8 3 7 
f 2 5 1 
f 5 2 8 

f 4 9 10 
f 3 4 10
f 9 10 14
f 9 14 13
f 13 14 15
f 13 16 15 
f 16 15 11
f 11 12 16
f 11 12 1
f 1 2 11 
f 1 12 16
f 16 13 1
f 4 13 9
f 13 1 16
f 1 13 4
f 16 4 1
f 14 3 10
f 14 15 3
f 2 15 11
f 15 2 14
f 14 2 3
f 3 15 2

# 12 faces#version 300 es

precision mediump float;

in vec4 fragColor;

out vec4 outColor;

void main() {
  if (gl_FrontFacing) {
    outColor = fragColor;
  } else {
    outColor = fragColor * 0.5;
  }
}#version 300 es

layout(location = 0) in vec3 inPosition;

uniform vec4 color;
uniform mat4 modelMatrix;
uniform mat4 viewMatrix;
uniform mat4 projMatrix;

out vec4 fragColor;

void main() {
  vec4 posEyeSpace = viewMatrix * modelMatrix * vec4(inPosition, 1);

  float i = 1.0 - (-posEyeSpace.z / 5.0);
  fragColor = vec4(i, i, i, 1) * color;

  gl_Position = projMatrix * posEyeSpace;
}